{"mappings":"AAAA;AAEA,MAAM,kBAAkB;OAAI,SAAS,gBAAgB,CAAC;CAAS;AAE/D,SAAS,SAAS,IAAI;IACpB,MAAM,YAAY,IAAI,CAAC,EAAE,CAAC,aAAa;IACvC,IAAI,aAAa,EAAE;IAEnB,aAAa,KAAK,IAAI,CACpB,CAAC,GAAG,IACF,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,MAC3C,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC;IAE/C,UAAU,SAAS,GAAG;IACtB,WAAW,OAAO,CAAC,CAAC,WAAa,UAAU,WAAW,CAAC;AACzD;AAEA,SAAS;AAET,SAAS,aAAa,IAAI;IACxB,KAAK,GAAG,CAAC,CAAC;QACR,OAAO;YACL,MAAM,SAAS,WAAW,CAAC,IAAI;YAC/B,UAAU,SAAS,OAAO,CAAC,QAAQ;YACnC,QAAQ,SAAS,OAAO,CAAC,MAAM;YAC/B,KAAK,SAAS,OAAO,CAAC,GAAG;QAC3B;IACF;AACF;AAEA,aAAa","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst listOfEmployees = [...document.querySelectorAll('ul li')];\n\nfunction sortList(list) {\n  const ulElement = list[0].parentElement;\n  let sortedList = [];\n\n  sortedList = list.sort(\n    (a, b) =>\n      +b.dataset.salary.slice(1).split(',').join('') -\n      +a.dataset.salary.slice(1).split(',').join(''),\n  );\n  ulElement.innerHTML = '';\n  sortedList.forEach((employee) => ulElement.appendChild(employee));\n}\n\nsortList(listOfEmployees);\n\nfunction getEmployees(list) {\n  list.map((employee) => {\n    return {\n      name: employee.textContent.trim(),\n      position: employee.dataset.position,\n      salary: employee.dataset.salary,\n      age: employee.dataset.age,\n    };\n  });\n}\n\ngetEmployees(listOfEmployees);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}